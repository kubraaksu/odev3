import random
#$numberOfCor=0
def bublesort(aList):
    karsilastirma=0
    yerdegistirme=0
    for passnum in range(len(alist) -1,0,1):
        for i in range(passnum):
            karsilastrima=karsilastirma+1
            if alist[i]>alist[i+1]:
                yerdegistirme=yerdegistirme+1
                temp=alist[i]
                alist[i]=alist[i+1]
                alist[i+1]=temp
   
def createArray(size):
    array=[]
    for i in range(0,size):
        array.append(int(random.uniform(-1000, 1000)))
    return array
def quickSort(alist):
   quickSortHelper(alist,0,len(alist)-1)

def quickSortHelper(alist,first,last):
   if first<last:

    splitpoint = partition(alist,first,last)

    quickSortHelper(alist,first,splitpoint-1)
    quickSortHelper(alist,splitpoint+1,last)


def partition(alist,first,last):
   pivotvalue = alist[first]

   leftmark = first+1
   rightmark = last
   numberOfCor=0

   done = False
   while not done:
    
       while leftmark <= rightmark and alist[leftmark] <= pivotvalue:
           leftmark = leftmark + 1
           global numberOfCor
           numberOfCor = numberOfCor+1

       while alist[rightmark] >= pivotvalue and rightmark >= leftmark:
            rightmark = rightmark -1
            global numberOfCor
            numberOfCor = numberOfCor+1

       if rightmark < leftmark:
           done = True
       else:
           temp = alist[leftmark]
           alist[leftmark] = alist[rightmark]
           alist[rightmark] = temp

       temp = alist[first]
       alist[first] = alist[rightmark]
       alist[rightmark] = temp

  
   return rightmark
   
size=int(input("size?"))
alist=createArray(size)
import time
t_start=time.time()
#print(alist)

#alist = [54,26,93,17,77,31,44,55,20]
quickSort(alist)
t_end = time.time()
bublesort(alist)
t_1=time.time()
#print(alist)
#print(numberOfCor)

print(" quick sort"    ,"time:",t_end-t_start)
print(" elemanli buble sort"    ,"time:",t_1-t_end)
